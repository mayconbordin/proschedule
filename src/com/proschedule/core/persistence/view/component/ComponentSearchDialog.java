package com.proschedule.core.persistence.view.component;

import com.proschedule.core.persistence.exceptions.ComponentPersistenceException;
import com.proschedule.util.combobox.StringOperatorComboBoxModel;
import com.proschedule.util.messages.MessageDialog;
import com.proschedule.util.search.ISearchDialog;
import com.proschedule.util.search.SearchParam;

/**
 * Diálogo de busca de componentes. Implementando um adaptador através da interface
 * ISearchDialog é possível efetuar a comunicação com o diálogo, permitindo que ele
 * envie o objeto Componente selecionado.
 *
 * @author Maycon Bordin
 * @version 1.0
 * @created 04-out-2010 13:24:49
 */
public class ComponentSearchDialog extends javax.swing.JDialog {
    private java.awt.Frame parent;
    private ComponentTableModel componentTableModel;
    private ComponentController controller;
    private ISearchDialog dialog;

    private ComponentFieldComboBoxModel componentFieldComboBoxModel;
    private StringOperatorComboBoxModel stringOperatorComboBoxModel;

    /**
     * Construtor da Classe
     * 
     * @param parent Frame principal
     * @param dialog Adaptador para comunicação
     */
    public ComponentSearchDialog(java.awt.Frame parent, ISearchDialog dialog) {
        super(parent, true);
        this.parent = parent;
        this.dialog = dialog;

        startUp();
    }

    /**
     * Inicia as configurações, componentens, variáveis
     */
    public void startUp() {
        controller = new ComponentController();

        //Carrega o table model
        loadComponentTableModel();

        initComponents();

        //Carrega a barra de busca
        loadSearchBar();

        //Centraliza o diálogo
        setLocationRelativeTo(null);

        setTitle("Buscar Componente");
    }

    /**
     * Carrega a barra de busca de componentes
     */
    public void loadSearchBar() {
        componentFieldComboBoxModel = new ComponentFieldComboBoxModel();
        stringOperatorComboBoxModel = new StringOperatorComboBoxModel();

        jcbField.setModel(componentFieldComboBoxModel);
        jcbOperator.setModel(stringOperatorComboBoxModel);

        jcbField.setSelectedIndex(0);
        jcbOperator.setSelectedIndex(0);
    }

    /**
     * Recarrega a posição padrão da barra de busca
     */
    public void reloadSearchBar() {
        jcbField.setSelectedIndex(0);
        jcbOperator.setSelectedIndex(0);
        jtfValue.setText(null);
    }

    /**
     * Carrega a tabela de componentes, listando todos os registros existentes
     */
    public void loadComponentTableModel() {
        try {
            componentTableModel = new ComponentTableModel( controller.getComponents() );
            componentTableModel.orderById();
        } catch (ComponentPersistenceException ex) {
            MessageDialog.error(ex, parent);
        }
    }

    /**
     * Recarrega a tabela de componentes. É usado quando modificações são efetuadas
     * em algum registro.
     */
    public void reloadComponentTableModel() {
        try {
            componentTableModel = new ComponentTableModel( controller.getComponents() );
            jtComponents.setModel(componentTableModel);
        } catch (ComponentPersistenceException ex) {
            MessageDialog.error(ex, parent);
        }
    }

    /**
     * Carrega no presenter o registro selecionado na tabela de componentes
     *
     * @return True se houver um registro selecionado ou falso se nada foi selecionado
     */
    public boolean loadSelectedRow() {
        int index = jtComponents.getSelectedRow();

        if ( index != -1 ) {
            //Seta o componente selecionado para edição
            controller.editComponent( componentTableModel.getComponent( index ) );

            return true;
        } else {
            MessageDialog.error("É preciso selecionar um componente para fazer isso!", parent);
            return false;
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jspComponents = new javax.swing.JScrollPane();
        jtComponents = new javax.swing.JTable();
        jlSearchingFor = new javax.swing.JLabel();
        jcbField = new javax.swing.JComboBox();
        jcbOperator = new javax.swing.JComboBox();
        jtfValue = new javax.swing.JTextField();
        jbGoSearch = new javax.swing.JButton();
        jbClearSearch = new javax.swing.JButton();
        jbSelect = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buscar Componente");
        setModal(true);
        setResizable(false);

        jtComponents.setModel(componentTableModel);
        jtComponents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtComponentsMouseClicked(evt);
            }
        });
        jspComponents.setViewportView(jtComponents);

        jlSearchingFor.setText("Buscar por");

        jbGoSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/proschedule/resources/images/forms/search_16.png"))); // NOI18N
        jbGoSearch.setToolTipText("Buscar");
        jbGoSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGoSearchActionPerformed(evt);
            }
        });

        jbClearSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/proschedule/resources/images/forms/clear_16.png"))); // NOI18N
        jbClearSearch.setToolTipText("Limpar Busca");
        jbClearSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClearSearchActionPerformed(evt);
            }
        });

        jbSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/proschedule/resources/images/forms/accept.png"))); // NOI18N
        jbSelect.setText("Selecionar");
        jbSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSelectActionPerformed(evt);
            }
        });

        jbCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/proschedule/resources/images/forms/close.png"))); // NOI18N
        jbCancel.setText("Cancelar");
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlSearchingFor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbOperator, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfValue, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbGoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbClearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(59, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jbSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jspComponents, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jbClearSearch)
                    .addComponent(jbGoSearch)
                    .addComponent(jtfValue, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbOperator, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcbField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlSearchingFor)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 294, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancel)
                    .addComponent(jbSelect))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(jspComponents, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(64, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Faz o mesmo que o botão selecionar quando for disparado um clique duplo
     * 
     * @param evt
     */
    private void jtComponentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtComponentsMouseClicked
        //Clique duplo
        if (evt.getClickCount() == 2) {
            if ( loadSelectedRow() ) {
                dialog.selectItem( controller.getComponent() );
                dispose();
            }
        }
}//GEN-LAST:event_jtComponentsMouseClicked

    /**
     * Modifica os operadores disponíveis de acordo com o campo escohlido.
     * Campos string tem alguns tipos de operadores e valores numéricos tem
     * outros.
     *
     * @param evt
     */
    /**
     * Realiza a busca de acordo com os parâmetros informados e lista-os na tabela
     * de componentes.
     *
     * @param evt
     */
    private void jbGoSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGoSearchActionPerformed
        try {
            SearchParam field = (SearchParam) jcbField.getSelectedItem();
            SearchParam operator = (SearchParam) jcbOperator.getSelectedItem();
            String value = jtfValue.getText();

            componentTableModel = new ComponentTableModel( controller.getComponents(field, value, operator) );
            jtComponents.setModel(componentTableModel);
        } catch (ComponentPersistenceException ex) {
            MessageDialog.error(ex, parent);
        } catch (NullPointerException ex) {
            MessageDialog.error("É preciso preencher todos os valores para a busca.", ex.toString(), parent);
        }
}//GEN-LAST:event_jbGoSearchActionPerformed

    /**
     * Limpa da tabela a busca realizada.
     *
     * @param evt
     */
    private void jbClearSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClearSearchActionPerformed
        reloadComponentTableModel();
        reloadSearchBar();
}//GEN-LAST:event_jbClearSearchActionPerformed

    /**
     * Fecha o diálogo
     * 
     * @param evt
     */
    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jbCancelActionPerformed

    /**
     * Repassa para o adaptador o objeto selecionado da lista
     * 
     * @param evt
     */
    private void jbSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSelectActionPerformed
        if ( loadSelectedRow() ) {
            dialog.selectItem( controller.getComponent() );
            dispose();
        }
    }//GEN-LAST:event_jbSelectActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbClearSearch;
    private javax.swing.JButton jbGoSearch;
    private javax.swing.JButton jbSelect;
    private javax.swing.JComboBox jcbField;
    private javax.swing.JComboBox jcbOperator;
    private javax.swing.JLabel jlSearchingFor;
    private javax.swing.JScrollPane jspComponents;
    private javax.swing.JTable jtComponents;
    private javax.swing.JTextField jtfValue;
    // End of variables declaration//GEN-END:variables

}
