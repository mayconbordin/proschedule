package com.proschedule.core.scheduling.view.order;

import com.proschedule.core.scheduling.exceptions.OrderDetailPersistenceException;
import com.proschedule.util.messages.MessageDialog;
import com.proschedule.validator.util.ValidatorException;

/**
 * Diálogo para modificação da quantidade de um componente
 * 
 * @author Maycon Bordin
 * @version 1.0
 * @created 04-out-2010 13:24:52
 */
public class OrderDetailDialog extends javax.swing.JDialog {
    private NewOrderPanel panel;
    private java.awt.Frame parent;
    private OrderController controller;

    /**
     * Construtor da classe
     * 
     * @param parent Frame principal
     * @param panel O painel de novas ordens de produção
     */
    public OrderDetailDialog(java.awt.Frame parent, NewOrderPanel panel) {
        super(parent, true);
        this.parent = parent;
        this.panel = panel;
        startUp();
    }

    /**
     * Inicia as configurações, componentens, variáveis
     */
    public void startUp() {
        this.controller = panel.getController();
        
        initComponents();

        //Centraliza o diálogo
        setLocationRelativeTo(null);

        //Coloca os valores na tela
        if ( controller.isDetailEdit()) {
            modelToView();
            setTitle("Modificar Componente");
        } else {
            setTitle("Adicionar Componente");
        }
    }

    /**
     * Passa os dados do detalhe em edição para os componentes visuais
     */
    public void modelToView() {
        jtfQuantity.setText( String.valueOf( controller.getOrderDetailComponentQuantity() ) );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpSetQuantity = new javax.swing.JPanel();
        jtfQuantity = new javax.swing.JTextField();
        jbCancel = new javax.swing.JButton();
        jbSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jpSetQuantity.setBorder(javax.swing.BorderFactory.createTitledBorder("Quantidade"));

        javax.swing.GroupLayout jpSetQuantityLayout = new javax.swing.GroupLayout(jpSetQuantity);
        jpSetQuantity.setLayout(jpSetQuantityLayout);
        jpSetQuantityLayout.setHorizontalGroup(
            jpSetQuantityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSetQuantityLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtfQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpSetQuantityLayout.setVerticalGroup(
            jpSetQuantityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSetQuantityLayout.createSequentialGroup()
                .addComponent(jtfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/proschedule/resources/images/forms/close_16.png"))); // NOI18N
        jbCancel.setText("Cancelar");
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });

        jbSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/proschedule/resources/images/forms/save_16.png"))); // NOI18N
        jbSave.setText("Salvar");
        jbSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jbSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpSetQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpSetQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancel)
                    .addComponent(jbSave))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Fecha o diálogo
     * 
     * @param evt
     */
    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jbCancelActionPerformed

    /**
     * Salva a nova quantidade informada
     * 
     * @param evt
     */
    private void jbSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveActionPerformed
        Double quantity = 0.0;
        boolean validQuantity = false;

        try {
            quantity = Double.parseDouble( jtfQuantity.getText() );
            validQuantity = true;
        } catch (NumberFormatException ex) {
            MessageDialog.warning("A quantidade para o componente deve ser numérica.", ex.toString(), parent);
        }

        if ( validQuantity ) {
            try {
                controller.setOrderDetailComponentQuantity(quantity);
                controller.saveOrderDetail();

                setVisible(false);

                panel.loadDetailTableModel();

                String message = "";

                if ( controller.isDetailEdit() ) {
                    message = "modificado";
                } else {
                    message = "adicionado";
                }

                //Exibe mensagem de sucesso
                MessageDialog.sucess("Componente " + message + " com sucesso!", parent);

                dispose();
            } catch (OrderDetailPersistenceException ex) {
                MessageDialog.error(ex, parent);
            } catch (ValidatorException ex) {
                MessageDialog.warning(ex, parent);
            }
        }
    }//GEN-LAST:event_jbSaveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbSave;
    private javax.swing.JPanel jpSetQuantity;
    private javax.swing.JTextField jtfQuantity;
    // End of variables declaration//GEN-END:variables

}
